let data = {
    "databases":["scopus"],
    "limit":9999,
    "limit_per_database":null,
    "number_of_papers":6,
    "number_of_papers_by_database":{
        "Scopus":6
    },
    "papers":[{
            "abstract":"Cloud native programming and the serverless paradigm can revolutionize software development and the operation of distributed applications. However, latency sensitive applications pose additional challenges to the underlying networks and cloud platforms. Moving compute resources to the edge is an inevitable step but further mechanisms and novel components are also required to enable such services in a serverless environment. In this demonstration, we present a novel system providing soft latency control for serverless applications and we showcase our proof-of-concept prototype supervising microservices operated on Amazon Web Services, and its edge extension, called Greengrass. Our main objective is the cost optimal operation while meeting the average latency requirements which is achieved by dynamically changing the software layout and serverless artifacts based on live monitoring. Â© 2020 Owner/Author.",
            "authors":["Pelle, I.","Czentye, J.","DÃ³ka, J.","Sonkoly, B."],
            "categories":null,
            "citations":1,
            "comments":null,
            "databases":["Scopus"],
            "doi":"10.1145/00000011.2222222",
            "keywords":["Greengrass","Lambda","IoT","Edge","Serverless","Cloud","AWS"],
            "number_of_pages":2,
            "pages":"33-34",
            "publication":{
                "category":"Conference Proceedings",
                "cite_score":null,
                "is_potentially_predatory":false,
                "isbn":"9781450380485",
                "issn":null,
                "publisher":null,
                "sjr":null,
                "snip":null,
                "subject_areas":[],
                "title":"Proceedings of the SIGCOMM 2020 Poster and Demo Sessions, SIGCOMM 2020"
            },
            "publication_date":"2020-08-10",
            "selected":null,
            "title":"Dynamic latency control of serverless applications operated on AWS lambda and greengrass",
            "urls":["https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85115694621&origin=inward"],
            "id":"cc74e78b-4eb1-48d8-9429-8430880948b9"
        },
        {
        "abstract":"During past few years, serverless computing has changed the paradigm of application development and deployment in the cloud and edge due to its unique advantages, including easy administration, automatic scaling, built-in fault tolerance, etc. Nevertheless, serverless computing is also facing challenges such as long latency due to the cold start. In this paper, we propose HotC, a container-based runtime management framework which leverages the lightweight containers to mitigate the cold start and improve network performance of serverless applications. HotC maintains a live container runtime pool, analyzes the user input or configuration file, and provides available runtime for immediate reuse. Our evaluation results show that HotC introduces negligible overhead and can efficiently improve performance of various applications in both cloud servers and edge devices. Â© 2020 ACM.",
        "authors":["Suo, K.","Shi, Y.","Xu, X.","Cheng, D.","Chen, W."],
        "categories":null,
        "citations":2,
        "comments":null,
        "databases":["Scopus"],
        "doi":"10.1145/3405672.3409493",
        "keywords":["Serverless","Performance","Cold Start","Container"],
        "number_of_pages":2,
        "pages":"54-55",
        "publication":{
            "category":"Conference Proceedings",
            "cite_score":null,
            "is_potentially_predatory":false,
            "isbn":"9781450380447",
            "issn":null,
            "publisher":null,
            "sjr":null,
            "snip":null,
            "subject_areas":[],
            "title":"NAI 2020 - Proceedings of the 2020 Workshop on Network Application Integration/CoDesign"
        },
        "publication_date":"2020-08-14",
        "selected":null,
        "title":"Tackling Cold Start in Serverless Computing with Container Runtime Reusing",
        "urls":["https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85094958728&origin=inward"],
        "id":"3766473c-24c6-4ba8-8d9b-770b7b503f3c"
    },
    {
        "abstract":"Cloud native programming and the serverless paradigm can revolutionize software development and the operation of distributed applications. However, latency sensitive applications pose additional challenges to the underlying networks and cloud platforms. Moving compute resources to the edge is an inevitable step but further mechanisms and novel components are also required to enable such services in a serverless environment. In this demonstration, we present a novel system providing soft latency control for serverless applications and we showcase our proof-of-concept prototype supervising microservices operated on Amazon Web Services, and its edge extension, called Greengrass. Our main objective is the cost optimal operation while meeting the average latency requirements which is achieved by dynamically changing the software layout and serverless artifacts based on live monitoring. Â© 2020 Owner/Author.",
        "authors":["Pelle, I.","Czentye, J.","DÃ³ka, J.","Sonkoly, B."],
        "categories":null,
        "citations":1,
        "comments":null,
        "databases":["Scopus"],
        "doi":"10.1145/3405837.3411381",
        "keywords":["Greengrass","Lambda","IoT","Edge","Serverless","Cloud","AWS"],
        "number_of_pages":2,
        "pages":"33-34",
        "publication":{
            "category":"Conference Proceedings",
            "cite_score":null,
            "is_potentially_predatory":false,
            "isbn":"9781450380485",
            "issn":null,
            "publisher":null,
            "sjr":null,
            "snip":null,
            "subject_areas":[],
            "title":"Proceedings of the SIGCOMM 2020 Poster and Demo Sessions, SIGCOMM 2020"
        },
        "publication_date":"2020-08-10",
        "selected":null,
        "title":"Dynamic latency control of serverless applications operated on AWS lambda and greengrass",
        "urls":["https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85115694621&origin=inward"],
        "id":"cc74e78b-4eb1-48d8-9429-8430880948b9"
    },
    {
        "abstract":"exemplo",
        "authors":["Pelle, I.","Czentye, J."],
        "categories":null,
        "citations":12,
        "comments":null,
        "databases":["Scopus"],
        "doi":"10.1145/5897.8521479",
        "keywords":["Greengrass","Lambda","IoT"],
        "number_of_pages":2,
        "pages":"33-34",
        "publication":{
            "category":"Conference Proceedings",
            "cite_score":null,
            "is_potentially_predatory":false,
            "isbn":"9781450380485",
            "issn":null,
            "publisher":null,
            "sjr":null,
            "snip":null,
            "subject_areas":[],
            "title":"exemplo"
        },
        "publication_date":"2020-08-10",
        "selected":null,
        "title":"Dynamic latency control of serverless applications operated on AWS lambda and greengrass",
        "urls":["https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85115694621&origin=inward"],
        "id":"cc74e78b-4eb1-48d8-9429-8430880948b9"
    },
    {
        "abstract":"Cloud native programming and the serverless paradigm can revolutionize software development and the operation of distributed applications. However, latency sensitive applications pose additional challenges to the underlying networks and cloud platforms. Moving compute resources to the edge is an inevitable step but further mechanisms and novel components are also required to enable such services in a serverless environment. In this demonstration, we present a novel system providing soft latency control for serverless applications and we showcase our proof-of-concept prototype supervising microservices operated on Amazon Web Services, and its edge extension, called Greengrass. Our main objective is the cost optimal operation while meeting the average latency requirements which is achieved by dynamically changing the software layout and serverless artifacts based on live monitoring. Â© 2020 Owner/Author.",
        "authors":["Pelle, I.","Czentye, J.","DÃ³ka, J.","Sonkoly, B."],
        "categories":null,
        "citations":1,
        "comments":null,
        "databases":["Scopus"],
        "doi":"10.1145/3405837.3411381",
        "keywords":["Greengrass","Lambda","IoT","Edge","Serverless","Cloud","AWS"],
        "number_of_pages":2,
        "pages":"33-34",
        "publication":{
            "category":"Conference Proceedings",
            "cite_score":null,
            "is_potentially_predatory":false,
            "isbn":"9781450380485",
            "issn":null,
            "publisher":null,
            "sjr":null,
            "snip":null,
            "subject_areas":[],
            "title":"Proceedings of the SIGCOMM 2020 Poster and Demo Sessions, SIGCOMM 2020"
        },
        "publication_date":"2020-08-10",
        "selected":null,
        "title":"Dynamic latency control of serverless applications operated on AWS lambda and greengrass",
        "urls":["https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85115694621&origin=inward"],
        "id":"cc74e78b-4eb1-48d8-9429-8430880948b9"
    },
    {
        "abstract":"Cloud native programming and the serverless paradigm can revolutionize software development and the operation of distributed applications. However, latency sensitive applications pose additional challenges to the underlying networks and cloud platforms. Moving compute resources to the edge is an inevitable step but further mechanisms and novel components are also required to enable such services in a serverless environment. In this demonstration, we present a novel system providing soft latency control for serverless applications and we showcase our proof-of-concept prototype supervising microservices operated on Amazon Web Services, and its edge extension, called Greengrass. Our main objective is the cost optimal operation while meeting the average latency requirements which is achieved by dynamically changing the software layout and serverless artifacts based on live monitoring. Â© 2020 Owner/Author.",
        "authors":["Pelle, I.","Czentye, J.","DÃ³ka, J.","Sonkoly, B."],
        "categories":null,
        "citations":1,
        "comments":null,
        "databases":["Scopus"],
        "doi":"10.1145/3405837.0000000",
        "keywords":["Greengrass","Lambda","IoT","Edge","Serverless","Cloud","AWS"],
        "number_of_pages":2,
        "pages":"33-34",
        "publication":{
            "category":"Conference Proceedings",
            "cite_score":null,
            "is_potentially_predatory":false,
            "isbn":"9781450380485",
            "issn":null,
            "publisher":null,
            "sjr":null,
            "snip":null,
            "subject_areas":[],
            "title":"Proceedings of the SIGCOMM 2020 Poster and Demo Sessions, SIGCOMM 2020"
        },
        "publication_date":"2020-08-10",
        "selected":null,
        "title":"Dynamic latency control of serverless applications operated on AWS lambda and greengrass",
        "urls":["https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85115694621&origin=inward"],
        "id":"cc74e78b-4eb1-48d8-9429-8430880948b9"
    }
    ],
    "processed_at":"2023-02-24 00:29:21",
    "publication_types":null,
    "query":"([serverless] OR [function-as-a-service] OR [function as a service] OR [backend-as-a-service] OR [backend as a service] OR [aws lambda] OR [google gloud platform] OR [azure functions]) AND ([fog] OR [edge])",
    "since":"2020-08-06",
    "until":"2020-08-16"
}

module.exports = {
    data_list : () => {
        return data
    }
}